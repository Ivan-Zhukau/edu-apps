apiVersion: v1
kind: ConfigMap
metadata:
  name: songs-service-db-init-config
  namespace: k8s-java-dev
data:
  init.sql: |
    create sequence songs_seq start with 1 increment by 50 ;

    create table songs ( id integer not null,
      resource_id integer not null unique,
      album varchar(255),
      artist varchar(255),
      length varchar(255),
      name varchar(255),
      year varchar(255),
      primary key (id)
    );
---
apiVersion: v1
kind: Service
metadata:
  name: songs-service-db-postgres-service
  namespace: k8s-java-dev
  labels:
    app: songs-service-db
spec:
    clusterIP: None 
    ports:
      - port: 5432
        targetPort: songs-db
    selector:
      app: songs-service-db

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: songs-service-db-postgres
  namespace: k8s-java-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: songs-service-db
  minReadySeconds: 2
  template:
    metadata: 
      labels:
        app: songs-service-db
    spec:
      containers:
      - name: songs-service-db
        image: 'postgres:latest'
        imagePullPolicy: IfNotPresent
        ports:
          - name: songs-db
            containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: k8s-java-dev-secrets
              key: songs.SONG_DB_PASS
        - name: POSTGRES_USER
          value: postgres    
        - name: POSTGRES_DB
          value: postgres
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: songs-db-postgresdata
        - mountPath: /docker-entrypoint-initdb.d
          name: songs-db-initdb
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -h 127.0.0.1 -U postgres -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 5432
          periodSeconds: 5            
      volumes:
      - name: songs-db-initdb
        configMap:
          name: songs-service-db-init-config
            
  volumeClaimTemplates:
    - metadata: 
        name: songs-db-postgresdata
        namespace: k8s-java-dev
      spec: 
        storageClassName: manual
        resources:
          requests:
            storage: 2Gi
        accessModes:
        - ReadWriteOnce
