apiVersion: v1
kind: Service
metadata:
  name: songs-back-service
  namespace: k8s-java-dev
spec:
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: http
    nodePort: 30080
  selector:
    app: songs-back

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: songs-back-deployment
  namespace: k8s-java-dev
  labels:
    app: songs-back
spec:
  replicas: 2
  selector:  
    matchLabels:
      app: songs-back
  template:
    metadata:
      namespace: k8s-java-dev
      labels:
        app: songs-back
    spec:
      containers:
        - name: microservice-intro-song-service
          image: microservice-intro-song-service
          imagePullPolicy: IfNotPresent
          args: ["java", "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005", "-jar", "app.jar"]
          ports:
            - name: http
              containerPort: 8080
            - name: java-debug
              containerPort: 5005
          env:
          - name: SONGS_DB_URL
            valueFrom:
              configMapKeyRef:
                name: k8s-java-dev-config
                key: songs.SONGS_DB_URL
          - name: SONGS_MS_PORT
            valueFrom:
              configMapKeyRef:
                name: k8s-java-dev-config
                key: songs.SONGS_MS_PORT                
          startupProbe:
            httpGet:
              path: /songs-ms/health
              port: http     
            failureThreshold: 29
            periodSeconds: 9
          livenessProbe:
            httpGet:
              path: /songs-ms/health
              port: http
            initialDelaySeconds: 14
            periodSeconds: 14
          readinessProbe:
            httpGet:
              path: /songs-ms/health
              port: http
            initialDelaySeconds: 14
            periodSeconds: 14 
