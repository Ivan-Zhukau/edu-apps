apiVersion: v1
kind: ConfigMap
metadata:
  name: resources-service-db-init-config
  namespace: k8s-java-dev
data:
  init.sql: |
    ALTER USER postgres with encrypted password 'postgres';
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: resources-service-db-config
  namespace: k8s-java-dev
data:
  POSTGRES_DB: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: resources-service-db-postgres-service
  namespace: k8s-java-dev
  labels:
    app: resources-service-db
spec:
    clusterIP: None 
    ports:
      - port: 5432
        targetPort: resources-db
    selector:
      app: resources-service-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resources-service-db-postgres
  namespace: k8s-java-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resources-service-db
  template:
    metadata: 
      labels:
        app: resources-service-db
    spec:
      containers:
      - name: resources-service-db
        image: 'postgres:latest'
        imagePullPolicy: IfNotPresent
        ports:
          - name: resources-db
            containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: resources-service-db-config
              value: POSTGRES_DB
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: resources-service-db-postgresdata

          - mountPath: /docker-entrypoint-initdb.d
            name: resources-db-initdb
      volumes:
        - name: resources-db-initdb
          configMap:
            name: resources-service-db-init-config  
  volumeClaimTemplates:
  - metadata: 
      name: resources-service-db-postgresdata
      namespace: k8s-java-dev
    spec:
      storageClassName: manual
      resources:
        requests:
          storage: 2Gi
      accessModes:
      - ReadWriteOnce
